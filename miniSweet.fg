#===============================
#
# Preparation
# -----------
#
#===============================
{short () `
	const svg = document.getElementById('gameZone')
	svg.setAttribute('width', innerWidth)
	svg.setAttribute('height', innerHeight)
`}

{deffunc drawNewSweet (p_id p_w p_h)
	:displayNewSVGElementIn (+ '<rect id="' $p_id '" width="' $p_w '" height="' $p_h '" rx="15" x="0" y="0" />') 'svg'
}

{deffunc lifeOfSweet (p_sName p_color p_x p_y p_width p_height)
	# birth
	#==========
	.var drawing <-- %drawNewSweet $p_sName $p_width $p_height
	{short (drawing p_color p_x p_y) `
		drawing.style.fill = p_color
		drawing.setAttribute('x', p_x)
		drawing.setAttribute('y', p_y)
		drawing.dx = 2
		drawing.dy = -2
	`}
	
	# rest of life
	#=============
	{par
		%continuous send drawing `
			send('me', drawing)
		`
		%continuous adapt drawing `
			function collision(pos1, size1, pos2, size2) {
				return -size2 <= (pos2-pos1) && (pos2-pos1) <= size1
			}
			// Bouncing
			//---------
			if (v(drawing.x) + v(drawing.width) > innerWidth) drawing.dx = - Math.abs(drawing.dx)
			if (v(drawing.x) < 0) drawing.dx = Math.abs(drawing.dx)
			if (v(drawing.y) + v(drawing.height) > innerHeight) drawing.dy = - Math.abs(drawing.dy)
			if (v(drawing.y) < 0) drawing.dy = Math.abs(drawing.dy)
			
			// Meeting
			//--------
			for (const other of events.get('me')) {
				if (drawing != other
						&& collision(v(drawing.x), v(drawing.width), v(other.x), v(other.width))
						&& collision(v(drawing.y), v(drawing.height), v(other.y), v(other.height))   ) {
					drawing.style.fill = '#cccccc'
				}
			}
		`
		%continuous play drawing `
			drawing.setAttribute('x', v(drawing.x) + drawing.dx*delta/30)
			drawing.setAttribute('y', v(drawing.y) + drawing.dy*delta/30)
		`
	}
}

#===============================
#
# Main program
# ------------
#
#===============================
.var innerWidth <-- .import innerWidth
.var innerHeight <-- .import innerHeight

{par
	(lifeOfSweet 'sweet1' '#ff0000' 10 10 100 100)
	(lifeOfSweet 'sweet2' '#00ff00' [$innerWidth / 3] [$innerHeight / 3] 100 100)
	(lifeOfSweet 'sweet3' '#0000ff' [[$innerWidth * 3] / 4] [[$innerHeight * 1] / 4] 100 100)
	(lifeOfSweet 'sweet4' '#ffff00' [[$innerWidth * 3] / 4] [[$innerHeight * 3] / 4] 100 100)
}
